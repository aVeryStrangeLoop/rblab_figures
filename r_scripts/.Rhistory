ylab("Carrying capacity") +
labs(fill="Proportion")
p
p <- ggplot(data_h,aes(x=res_f,y=pop_f)) +
geom_tile(aes(fill=p2)) +
scale_fill_viridis(option="magma",limits=c(0,0.31)) +
theme_minimal() +
xlab("Resource abundance") +
ylab("Carrying capacity") +
labs(fill="Proportion")
p
p <- ggplot(data_h,aes(x=res_f,y=pop_f)) +
geom_tile(aes(fill=p3)) +
scale_fill_viridis(option="magma",limits=c(0,0.31)) +
theme_minimal() +
xlab("Resource abundance") +
ylab("Carrying capacity") +
labs(fill="Proportion")
p
p <- ggplot(data_h,aes(x=res_f,y=pop_f)) +
geom_tile(aes(fill=p4)) +
scale_fill_viridis(option="magma",limits=c(0,0.31)) +
theme_minimal() +
xlab("Resource abundance") +
ylab("Carrying capacity") +
labs(fill="Proportion")
p
library(ggplot2)
library(viridis)
data <- read.csv("~/wsl_files/rblab/rblab_figures/data/peak_fractions.csv")
data$res_f = factor(data$res, levels=c('8k','10k','100k','1000k'))
data$pop_f = factor(data$pop, levels=c(100,200,500))
data_h <- data[data$mut=="l" & data$res!="8k",]
p <- ggplot(data_h,aes(x=res_f,y=pop_f)) +
geom_tile(aes(fill=p3)) +
scale_fill_viridis(option="magma",limits=c(0,0.31)) +
theme_minimal() +
xlab("Resource abundance") +
ylab("Carrying capacity") +
labs(fill="Proportion")
p
p <- ggplot(data_h,aes(x=res_f,y=pop_f)) +
geom_tile(aes(fill=p4)) +
scale_fill_viridis(option="magma",limits=c(0,0.31)) +
theme_minimal() +
xlab("Resource abundance") +
ylab("Carrying capacity") +
labs(fill="Proportion")
p
library(ggplot2)
library(dplyr)
library(tidyr)
data0 <- read.csv("~/wsl_files/rblab/rblab_figures/data/highmut_samples_100/genomes_maxima0_tasks.csv")
data1 <- read.csv("~/wsl_files/rblab/rblab_figures/data/highmut_samples_100/genomes_maxima1_tasks.csv")
data2 <- read.csv("~/wsl_files/rblab/rblab_figures/data/highmut_samples_100/genomes_maxima2_tasks.csv")
data3 <- read.csv("~/wsl_files/rblab/rblab_figures/data/highmut_samples_100/genomes_maxima3_tasks.csv")
data0$peak <- as.factor(0)
data1$peak <- as.factor(1)
data2$peak <- as.factor(2)
data3$peak <- as.factor(3)
data <- data0
data <- rbind(data,data1)
data <- rbind(data,data2)
data <- rbind(data,data3)
data <- rbind(data,data4)
## Plot merits
p_merit <- ggplot(data,aes(x=peak,y=merit,color=factor(1))) +
geom_boxplot() + ylim(110,NA) + theme_minimal() +
xlab("Peak") + ylab("Merit") + theme(legend.position="None")
p_merit
## Plot merits
p_merit <- ggplot(data,aes(x=peak,y=merit,color=factor(1))) +
geom_boxplot() + theme_minimal() +
xlab("Peak") + ylab("Merit") + theme(legend.position="None")
p_merit
## Plot merits
p_merit <- ggplot(data,aes(x=peak,y=merit,color=factor(1))) +
geom_boxplot() + ylim(100,NA) + theme_minimal() +
xlab("Peak") + ylab("Merit") + theme(legend.position="None")
p_merit
## Plot merits
p_merit <- ggplot(data,aes(x=peak,y=merit,color=factor(1))) +
geom_boxplot() + ylim(105,NA) + theme_minimal() +
xlab("Peak") + ylab("Merit") + theme(legend.position="None")
p_merit
## Plot task spectrum
data_reshaped <- data %>% select(peak, task.0, task.1, task.2, task.3, task.4, task.5, task.6, task.7, task.8) %>%
pivot_longer(., cols = c(task.0,task.1,task.2,task.3,task.4,task.5,task.6,task.7,task.8), names_to = "task", values_to = "num")
data_reshaped
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task + ylim(NA,25)  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task + ylim(NA,15)  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task + ylim(NA,NA)  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task   + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task + ylim(NA,200)  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task + ylim(NA,500)  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task + ylim(NA,200)  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task + ylim(NA,600)  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task + ylim(NA,200)  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=log(num),fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped[data_reshaped$num<300],aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped[data_reshaped$num<300,],aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped[data_reshaped$num<400,],aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped[data_reshaped$num<500,],aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped[data_reshaped$num<600,],aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped[data_reshaped$num<600,],aes(x=task,y=num,fill=peak)) + geom_boxplot()
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + coord_cartesian(ylim=c(0, 200)) + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + coord_cartesian(ylim=c(0, 50)) + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
p_task <- ggplot(data_reshaped,aes(x=task,y=num,fill=peak)) + geom_boxplot(outlier.shape = NA)
p_task  + coord_cartesian(ylim=c(0, 200)) + facet_grid(peak~.,labeller = label_both) + theme_minimal() +
xlab("Task Complexity") + ylab("Instances per genome") + theme(legend.position = "None", axis.text.x=element_blank())
library(ggplot2)
library(dplyr)
library(tidyr)
data0 <- read.csv("~/wsl_files/rblab/rblab_figures/data/highmut_samples_100/genomes_maxima0.csv")
data1 <- read.csv("~/wsl_files/rblab/rblab_figures/data/highmut_samples_100/genomes_maxima1.csv")
data2 <- read.csv("~/wsl_files/rblab/rblab_figures/data/highmut_samples_100/genomes_maxima2.csv")
data3 <- read.csv("~/wsl_files/rblab/rblab_figures/data/highmut_samples_100/genomes_maxima3.csv")
data0$peak <- as.factor(0)
data1$peak <- as.factor(1)
data2$peak <- as.factor(2)
data3$peak <- as.factor(3)
data <- data0
data <- rbind(data,data1)
data <- rbind(data,data2)
data <- rbind(data,data3)
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=scf-del_msg_scf,color=factor(1))) +
geom_boxplot() + theme_minimal() +
xlab("Peak") + ylab("MUM") + theme(legend.position="None")
p_merit
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=scf-del_msg_scf,color=factor(1))) +
geom_boxplot() + theme_minimal() +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=scf-del_msg_scf,color=factor(1))) +
geom_violin() + theme_minimal() +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=scf-del_msg_scf,color=peak)) +
geom_violin() + theme_minimal() +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=scf-del_msg_scf,color=1)) +
geom_violin() + theme_minimal() +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=scf-del_msg_scf,color=1)) +
geom_violin() + theme_minimal() + geom_jitter() +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=scf-del_msg_scf,color=1)) +
geom_violin() + theme_minimal() + geom_jitter(aes(alpha=0.1)) +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=scf-del_msg_scf,color=1)) +
geom_violin() + theme_minimal() + geom_jitter(aes(alpha=0.05)) +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_violin() + theme_minimal() + geom_jitter(aes(alpha=0.05)) +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_boxplot() + theme_minimal() + geom_jitter(aes(alpha=0.05)) +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_boxplot() + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal() + geom_jitter(aes(alpha=0.05)) +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal() + geom_jitter(aes(alpha=0.05)) +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_jitter(aes(alpha=0.05)) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_jitter(aes(alpha=0.05),width=0.3) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_jitter(aes(alpha=0.05),width=0.2) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_jitter(aes(alpha=0.05,color=peak),width=0.2) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_jitter(aes(alpha=0.05,color=factor(peak)),width=0.2) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=factor(1))) +
geom_jitter(aes(alpha=0.05,color=peak),width=0.2) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=peak)) +
geom_jitter(aes(alpha=0.05,color=peak),width=0.2) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_jitter(aes(alpha=0.05),width=0.2) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_jitter(aes(alpha=0.001),width=0.2) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
## Plot merits
p_mum <- ggplot(data,aes(x=peak,y=(scf-del_msg_scf) / scf,color=1)) +
geom_jitter(aes(alpha=0.0001),width=0.2) + geom_boxplot(outlier.shape = NA) + coord_cartesian(ylim=c(NA, 0.5)) + theme_minimal()  +
xlab("Peak") + ylab("Marginal utility of messaging") + theme(legend.position="None")
p_mum
library(ggplot2)
data <- read.csv("~/wsl_files/rblab/rblab_figures/data/populations_classified.csv")
data$peak_by_dominant <- as.factor(data$peak_by_dominant)
p <- ggplot(data[data$peak_by_dominant!=-1,],aes(x=peak_by_dominant,y=entropy))+ geom_boxplot()
p + theme_minimal() + facet_grid(pop~res) + xlab("Peak") + ylab("Population genomic entropy")
data
p + theme_minimal() + facet_grid(pop~res_ab) + xlab("Peak") + ylab("Population genomic entropy")
library(ggplot2)
data <- read.csv("~/wsl_files/rblab/rblab_figures/data/populations_classified.csv")
data$peak_by_dominant <- as.factor(data$peak_by_dominant)
data
p <- ggplot(data[data$peak_by_dominant!=-1,],aes(x=peak_by_dominant,y=entropy))+ geom_boxplot()
p + theme_minimal() + facet_grid(pop~res_ab) +xlab("Peak") + ylab("Population genomic entropy")
library(ggplot2)
data <- read.csv("~/wsl_files/oan-figures/2_ei_plot/endpoint_data.csv")
## Fix values
data <- data[data$exp_eff & data$comp_cap==10 & data$donate_state=="true",]
## Fix values
data <- data[data$exp_eff==0.5 & data$cmpd_coeff==1.0 & data$donate_state=="true",]
data
## Fix values
data <- data[data$exp_eff==1.0 & data$cmpd_coeff==1.0 & data$donate_state=="true",]
data
## Fix values
data <- data[data$exp_eff==0.75 & data$cmpd_coeff==1.0 & data$donate_state=="true",]
data
## Fix values
data <- data[data$exp_eff==0.5 & data$cmpd_coeff==1.0 & data$donate_state=="true",]
data
library(ggplot2)
data <- read.csv("~/wsl_files/oan-figures/2_ei_plot/endpoint_data.csv")
## Fix values
data <- data[data$exp_eff==1.0 & data$cmpd_coeff==1.0 & data$donate_state=="true",]
data
data_summary <- function(data,varname,groupnames){
require(plyr)
summary_func <- function(x,col){
c(mean = mean(x[[col]],na.rm=TRUE),
sd = sd(x[[col]],na.rm=TRUE))
}
data_sum <- ddply(data,groupnames,.fun=summary_func,varname)
data_sum <- rename(data_sum,c("mean"=varname))
return(data_sum)
}
data_agg <- data_summary(data,varname = "ei",groupnames = c("uf","grid_size","comp_cap"))
data_agg
data_summary <- function(data,varname,groupnames){
require(plyr)
summary_func <- function(x,col){
c(mean = mean(x[[col]],na.rm=TRUE),
sd = sd(x[[col]],na.rm=TRUE))
}
data_sum <- ddply(data,groupnames,.fun=summary_func,varname)
data_sum <- rename(data_sum,c("mean"=varname))
return(data_sum)
}
data_agg <- data_summary(data,varname = "ei",groupnames = c("uf","grid_size","comp_cap"))
data_agg
data_agg$comp_cap <- as.factor(data_agg$comp_cap)
p <- ggplot(data_agg,aes(x=grid_size,y=ei,group=comp_cap,color=comp_cap)) +
geom_point(position=position_dodge(.0001)) + geom_line(position=position_dodge(.0001))+
geom_errorbar(aes(ymin=ei-sd,ymax=ei+sd),width=.001,
position=position_dodge(.0001)) + theme_minimal() + facet_grid(.~uf) +
theme(axis.text.x = element_text(angle =45))
p  + xlab("Grid Size") + ylab("EI Value") + labs(color="Computational Cap.")
library(ggplot2)
data <- read.csv("~/wsl_files/oan-figures/3_smi_plot/endpoint_data.csv")
## Fix values
data <- data[data$grid_size==5 & data$comp_cap==10 & data$donate_state=="true",]
data_summary <- function(data,varname,groupnames){
require(plyr)
summary_func <- function(x,col){
c(mean = mean(x[[col]],na.rm=TRUE),
sd = sd(x[[col]],na.rm=TRUE))
}
data_sum <- ddply(data,groupnames,.fun=summary_func,varname)
data_sum <- rename(data_sum,c("mean"=varname))
return(data_sum)
}
data_agg <- data_summary(data,varname = "smi",groupnames = c("uf","exp_eff","cmpd_coeff"))
data_agg
data_agg$cmpd_coeff <- as.factor(data_agg$cmpd_coeff)
p <- ggplot(data_agg,aes(x=exp_eff,y=smi,group=cmpd_coeff,color=cmpd_coeff)) +
geom_point(position=position_dodge(.0001)) + geom_line(position=position_dodge(.0001))+
geom_errorbar(aes(ymin=smi-sd,ymax=smi+sd),width=.001,
position=position_dodge(.0001)) + theme_minimal() + facet_grid(.~uf) +
theme(axis.text.x = element_text(angle =45))
p  + xlab("Export Efficacy") + ylab("SMI Value") + labs(color="Compounding")
p  + xlab("Export Efficacy") + ylab("SMI Value") + labs(color="Compounding") + ylim(NA,1)
p  + xlab("Export Efficacy") + ylab("SMI Value") + labs(color="Compounding")
library(ggplot2)
data <- read.csv("~/wsl_files/oan-figures/3_smi_plot/endpoint_data.csv")
## Fix values
data <- data[data$exp_eff==1.0 & data$cmpd_coeff==1.0 & data$donate_state=="true",]
data
data_summary <- function(data,varname,groupnames){
require(plyr)
summary_func <- function(x,col){
c(mean = mean(x[[col]],na.rm=TRUE),
sd = sd(x[[col]],na.rm=TRUE))
}
data_sum <- ddply(data,groupnames,.fun=summary_func,varname)
data_sum <- rename(data_sum,c("mean"=varname))
return(data_sum)
}
data_agg <- data_summary(data,varname = "smi",groupnames = c("uf","grid_size","comp_cap"))
data_agg
data_agg$comp_cap <- as.factor(data_agg$comp_cap)
p <- ggplot(data_agg,aes(x=grid_size,y=smi,group=comp_cap,color=comp_cap)) +
geom_point(position=position_dodge(.0001)) + geom_line(position=position_dodge(.0001))+
geom_errorbar(aes(ymin=smi-sd,ymax=smi+sd),width=.001,
position=position_dodge(.0001)) + theme_minimal() + facet_grid(.~uf) +
theme(axis.text.x = element_text(angle =45))
p  + xlab("Grid Size") + ylab("SMI Value") + labs(color="Computational Cap.")
p  + xlab("log Number of agents") + ylim(NA,0.5) + ylab("Marginal utility") + labs(color="Computational capacity")
data <- read.csv("~/wsl_files/oan-figures/4_marginal_utility/endpoint_combined.csv")
library(ggplot2)
data_sub <- data[data$exp_eff==1.0 &
data$cmpd_coeff==1.0,]
data_sub$uf <- as.factor(data_sub$uf)
data_summary <- function(data,varname,groupnames){
require(plyr)
summary_func <- function(x,col){
c(mean = mean(x[[col]],na.rm=TRUE),
sd = sd(x[[col]],na.rm=TRUE))
}
data_sum <- ddply(data,groupnames,.fun=summary_func,varname)
data_sum <- rename(data_sum,c("mean"=varname))
return(data_sum)
}
data_sub$muc <- (data_sub$fit - data_sub$fit_no_donate) / (data_sub$fit)
data_agg <- data_summary(data_sub,varname = "muc",groupnames = c("uf","grid_size","comp_cap"))
data_agg$comp_cap <- as.factor(data_agg$comp_cap)
p <- ggplot(data_agg,aes(x=log(grid_size*grid_size),y=muc,group=comp_cap,color=comp_cap)) +
geom_point(position=position_dodge(.0001)) + geom_line(position=position_dodge(.0001))+
geom_errorbar(aes(ymin=muc-sd,ymax=muc+sd),width=.001,
position=position_dodge(.0001)) + theme_minimal() + facet_grid(.~uf) +
theme(axis.text.x = element_text(angle =45))
p  + xlab("log Number of agents") + ylim(NA,0.5) + ylab("Marginal utility") + labs(color="Computational capacity")
p <- ggplot(data_agg,aes(x=log(grid_size*grid_size),y=muc,group=comp_cap,color=comp_cap)) +
geom_point(position=position_dodge(.0001)) + geom_line(position=position_dodge(.0001))+
geom_errorbar(aes(ymin=muc-sd,ymax=muc+sd),width=.001,
position=position_dodge(.0001)) + theme_minimal() + facet_grid(.~uf) +
theme(axis.text.x = element_text(angle =45)) + geom_hline(yintercept = 0.0)
p  + xlab("log Number of agents") + ylim(NA,0.5) + ylab("Marginal utility") + labs(color="Computational capacity")
packageVersion("ggplot2")
setwd("~/wsl_files/rblab/rblab_figures/r_scripts")
library(ggplot2)
data <- read.csv("~/wsl_files/rblab/rblab_figures/data/data_w_mech.csv")
# High mutation rate
data_h <- data[data$scf!=0 & data$mut=="h" & data$res_ab=="10k" & data$pop==500,]
plot_h <- ggplot(data=data_h,aes(x=scf)) + geom_density()
plot_h <- plot_h + theme_minimal() + geom_vline(xintercept=8.78)
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25)+ ylim(0,0.25)
# High mutation rate
data_h <- data[data$scf!=0 & data$mut=="h" & data$res_ab=="100k" & data$pop==500,]
plot_h <- ggplot(data=data_h,aes(x=scf)) + geom_density()
plot_h <- plot_h + theme_minimal() + geom_vline(xintercept=8.78)
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25)+ ylim(0,0.25)
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25)+ ylim(0,0.25) +
facet_grid(repl,ncols=5)
# High mutation rate
data_h <- data[data$scf!=0 & data$mut=="h" & data$res_ab=="100k" & data$pop==500,]
plot_h <- ggplot(data=data_h,aes(x=scf)) + geom_density()
plot_h <- plot_h + theme_minimal() + geom_vline(xintercept=8.78)
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25)+ ylim(0,0.25) +
facet_grid(repl)
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25)+ ylim(0,0.25) +
facet_wrap(repl)
# High mutation rate
data_h <- data[data$scf!=0 & data$mut=="h" & data$res_ab=="100k" & data$pop==500,]
data_h
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25)+ ylim(0,0.25) +
facet_wrap(~repl)
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25) +
facet_wrap(~repl)
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25) + ylim(0,2) +
facet_wrap(~repl)
# High mutation rate
data_h <- data[data$scf!=0 & data$mut=="h" & data$res_ab=="1000k" & data$pop==500,]
data_h
plot_h <- ggplot(data=data_h,aes(x=scf)) + geom_density()
plot_h <- plot_h + theme_minimal() + geom_vline(xintercept=8.78)
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25) + ylim(0,2) +
facet_wrap(~repl)
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25) + ylim(0,1.5) +
facet_wrap(~repl)
data_h
plot_h <- ggplot(data=data_h,aes(x=scf)) + geom_density()
plot_h <- plot_h + theme_minimal() + geom_vline(xintercept=8.78, linetype="dotted")
plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25) + ylim(0,1.5) +
facet_wrap(~repl)
library(ggplot2)
data <- read.csv("~/wsl_files/rblab/rblab_figures/data/data_w_mech.csv")
data$res_ab_f = factor(data$res_ab, levels=c('8k','10k','100k','1000k'))
data$pop_f = factor(data$pop, levels=c(100,200,500))
# Low mutation rate
data_l <- data[data$scf!=0 & data$mut=="l",] #Only low mutation condition at high res_ab, high pop
plot_l <- ggplot(data=data_l,aes(x=scf)) + geom_density()
plot_l <- plot_l + theme_minimal() + geom_vline(xintercept=8.78)
plot_l <- plot_l + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25) + ylim(0,1.0)
plot_l + facet_grid(pop_f~res_ab_f)
library(ggplot2)
data <- read.csv("~/wsl_files/rblab/rblab_figures/data/data_w_mech.csv")
data <- data[data$res_ab!="8k"]
data$res_ab_f = factor(data$res_ab, levels=c('8k','10k','100k','1000k'))
data$pop_f = factor(data$pop, levels=c(100,200,500))
# Low mutation rate
data_l <- data[data$scf!=0 & data$mut=="l",] #Only low mutation condition at high res_ab, high pop
library(ggplot2)
data <- read.csv("~/wsl_files/rblab/rblab_figures/data/data_w_mech.csv")
data <- data[data$res_ab!="8k",]
data$res_ab_f = factor(data$res_ab, levels=c('8k','10k','100k','1000k'))
data$pop_f = factor(data$pop, levels=c(100,200,500))
# Low mutation rate
data_l <- data[data$scf!=0 & data$mut=="l",] #Only low mutation condition at high res_ab, high pop
plot_l <- ggplot(data=data_l,aes(x=scf)) + geom_density()
plot_l <- plot_l + theme_minimal() + geom_vline(xintercept=8.78)
plot_l <- plot_l + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25) + ylim(0,1.0)
plot_l + facet_grid(pop_f~res_ab_f)
# Low mutation rate
data_l <- data[data$scf!=0 & data$mut=="l",] #Only low mutation condition at high res_ab, high pop
plot_l <- ggplot(data=data_l,aes(x=scf)) + geom_density()
plot_l <- plot_l + theme_minimal() + geom_vline(xintercept=8.78, linetype="dotted")
plot_l <- plot_l + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25) + ylim(0,1.0)
plot_l + facet_grid(pop_f~res_ab_f)
# High mutation rate
data_h <- data[data$scf!=0 & data$mut=="h",]
plot_h <- ggplot(data=data_h,aes(x=scf)) + geom_density()
plot_h <- plot_h + theme_minimal() + geom_vline(xintercept=8.78, linetype="dotted")
plot_h <- plot_h + xlab("Fitness (Births/Update)") + ylab("Density") + xlim(0,25)+ ylim(0,0.25)
plot_h + facet_grid(pop_f~res_ab_f)
